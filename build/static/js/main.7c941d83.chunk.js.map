{"version":3,"sources":["components/general/Message.js","components/general/Loader.js","components/general/FormContainer.js","constants/authConstants.js","actions/authActions.js","components/auth/Login.js","components/auth/AddWriter.js","components/general/Header.js","components/general/Footer.js","components/blogs/AllBlogs.js","constants/blogsConstant.js","actions/blogsActions.js","components/blogs/home.js","components/blogs/AddBlogs.js","services/blogs.js","components/blogs/Blog.js","components/blogs/RequestedBlogs.js","App.js","reportWebVitals.js","services/auth.js","sagas/auth.js","sagas/blogs.js","sagas/index.js","reducers/authReducer.js","reducers/blogsReducer.js","services/setToken.js","store.js","index.js"],"names":["Message","variant","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","className","FormContainer","Container","Row","Col","xs","md","USER_SIGNIN","USER_SIGNUP","USER_SIGNIN_RESULT","USER_SIGNUP_RESULT","USER_SIGNIN_ERROR","REMOVE_MESSAGE","USER_LOGOUT","userSignInError","payload","type","Login","history","useState","email","setEmail","password","setPassword","setMessage","dispatch","useDispatch","user","useSelector","state","loading","error","userInfo","useEffect","push","axios","defaults","headers","common","token","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","AddWriter","confirmPassword","setConfirmPassword","phone","setPhone","fullName","setName","message","userMessage","setTimeout","name","pattern","Header","props","useLocation","useHistory","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","id","Nav","exact","Link","isAdmin","onClick","localStorage","removeItem","Footer","AllBlogs","blog","isLoggedIn","isFavouritePage","fluid","Card","Body","Title","as","title","Text","fontSize","moment","approvedOn","format","content","substring","length","_id","GET_BLOGS","GET_PUBLISHED_BLOGS","GET_PUBLISHED_BLOGS_RESULT","PUBLISH_BLOGS","PUBLISH_BLOGS_RESULT","APPROVE_BLOGS","APPROVE_BLOGS_RESULT","SET_LOADING","BLOGS_RESULT","BLOGS_ERROR","END_LOADING","REMOVE_ERRORS","blogError","removeMessage","HomeScreen","blogs","blogsData","map","sm","lg","xl","setTitle","setContent","blogMessage","replacedContent","replaceAll","rows","publishBlog","data","a","config","post","res","console","log","approveBlog","getBlogs","get","getPublishedBlogs","getBlogById","Blog","setBlog","setLoading","location","pathname","split","blogData","getBlog","fontWeight","userId","publishedBlogs","Table","striped","bordered","hover","key","publishedOn","blogId","color","App","minHeight","path","component","RequestedBlogs","AddBlogs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userSignIn","userSignUp","userSignInSaga","userSignUpSaga","actionWatcher","param","call","AuthService","response","status","put","AuthActions","setItem","JSON","stringify","all","takeLatest","getBlogsSaga","getPublishedBlogsSaga","publishBlogSaga","approveBlogSaga","BlogService","BlogAction","IndexSagas","auth","initialState","myBlogs","rejectedBlogs","setAuthToken","userInfoFromStorage","getItem","parse","reducers","combineReducers","action","filter","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c941d83.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{\r\n            width: '100px', \r\n            height: '100px', \r\n            margin: 'auto',\r\n            display: 'block'}}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport {Row, Col, Container} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","export const USER_SIGNIN = 'USER_SIGNIN';\r\nexport const USER_SIGNUP = 'USER_SIGNUP';\r\nexport const USER_SIGNIN_RESULT = 'USER_SIGNIN_RESULT';\r\nexport const USER_SIGNUP_RESULT = 'USER_SIGNUP_RESULT';\r\nexport const USER_SIGNIN_ERROR = 'USER_SIGNIN_ERROR';\r\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE';\r\n\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';","import {USER_SIGNIN, USER_SIGNUP, USER_LOGOUT, USER_SIGNIN_RESULT, USER_SIGNUP_RESULT, USER_SIGNUP_ERROR, USER_SIGNIN_ERROR, REMOVE_MESSAGE} from '../constants/authConstants'\r\nexport const userSignIn = (payload) => {\r\n    return {\r\n        type: USER_SIGNIN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const userSignInResult = (payload) => {\r\n    localStorage.setItem('userInfo', JSON.stringify(payload));\r\n    return {\r\n        type: USER_SIGNIN_RESULT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const userSignUp = (payload) => {\r\n    return {\r\n        type: USER_SIGNUP,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const removeMessage = () => {\r\n    return {\r\n        type: REMOVE_MESSAGE\r\n    }\r\n}\r\n\r\nexport const userSignUpResult = (payload) => {\r\n    return {\r\n        type: USER_SIGNUP_RESULT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const userSignInError = (payload) => {\r\n    return {\r\n        type: USER_SIGNIN_ERROR,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('userInfo')\r\n    return {\r\n        type: USER_LOGOUT,\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../general/Message';\r\nimport Loader from '../general/Loader';\r\nimport FormContainer from '../general/FormContainer';\r\nimport {userSignIn,userSignUp} from '../../actions/authActions';\r\nimport axios from 'axios'\r\n\r\nconst Login = ({history}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.user)\r\n    const {loading, error, userInfo} = user;\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push('/');\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${userInfo.token}`;\r\n        }\r\n    }, [history, userInfo]);\r\n\r\n    const submitLoginHandler = (e) => {\r\n        if(!email || !password) {\r\n            setMessage('Please Fill All Details');\r\n        }\r\n        e.preventDefault();\r\n        dispatch(userSignIn({email, password}));\r\n    }\r\n    \r\n        return (\r\n            <FormContainer>\r\n                <h1>Sign In</h1>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitLoginHandler}>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Sign In\r\n                    </Button>\r\n\r\n                </Form>\r\n                {/* <p className='py-3'>Don't have an Accout? <span style={{fontWeight: '900', cursor: 'pointer'}} onClick={() => setIsLogin(!isLogin)}>Sign Up</span></p> */}\r\n            </FormContainer>\r\n        )\r\n    }\r\n\r\nexport default Login\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../general/Message';\r\nimport Loader from '../general/Loader';\r\nimport FormContainer from '../general/FormContainer';\r\nimport {removeMessage,userSignUp} from '../../actions/authActions';\r\n\r\nconst AddWriter = ({history}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [fullName, setName] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.user)\r\n    const {loading, error, userInfo, userMessage} = user;\r\n    \r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if(userMessage) {\r\n            setEmail('')\r\n            setPassword('')\r\n            setConfirmPassword('')\r\n            setName('')\r\n            setPhone('')\r\n            setMessage(null)\r\n            setTimeout(() => {dispatch(removeMessage())}, 4000)\r\n        }\r\n    }, [userMessage, userInfo])\r\n\r\n    const submitRegisterHandler = (e) => {\r\n        e.preventDefault();\r\n        if(!email || !password || !confirmPassword || !phone || !fullName) {\r\n            setMessage('Please Fill All Details');\r\n        }\r\n        else if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        }\r\n        else {\r\n            setMessage(null);\r\n            dispatch(userSignUp({name: fullName, phone, email, password}));\r\n            // console.log(name, email, password)\r\n        }\r\n    }\r\n    \r\n        return (\r\n            <FormContainer>\r\n                <h1>Add Content Writer</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {userMessage && <Message variant='success'>{userMessage}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitRegisterHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter name'\r\n                            value={fullName}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='phone'>\r\n                        <Form.Label>Mobile Number</Form.Label>\r\n                        <Form.Control\r\n                            type='tel'\r\n                            pattern=\"[0-9]{10}\"\r\n                            placeholder='Enter Mobile Number'\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n                {/* <p className='py-3'>Already have an Accout? <span style={{fontWeight: '900', cursor: 'pointer'}} onClick={() => setIsLogin(!isLogin)}>Sign In</span></p> */}\r\n            </FormContainer>\r\n        )\r\n    }\r\n\r\nexport default AddWriter\r\n","import React, {useEffect} from 'react'\r\nimport { useHistory ,useLocation } from 'react-router-dom';\r\nimport {Navbar, Nav, Container, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logout} from '../../actions/authActions'\r\nimport axios from 'axios'\r\n\r\nconst Header = (props) => {\r\n  const user = useSelector(state => state.user);\r\n  const {userInfo} = user;\r\n\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const dispatch = useDispatch();\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n              <Container>\r\n              <LinkContainer to='/'>\r\n                <Navbar.Brand>Applore Blog</Navbar.Brand>\r\n              </LinkContainer>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                \r\n                <Nav className=\"ml-auto\">\r\n              \r\n                {userInfo ? (\r\n                  <>\r\n                    <LinkContainer to='/'exact>\r\n                      <Nav.Link>Home</Nav.Link>\r\n                    </LinkContainer>\r\n                    \r\n                    {userInfo.isAdmin ?\r\n                      (\r\n                        <>\r\n                          <LinkContainer to='/request'exact>\r\n                            <Nav.Link>Requested Blogs</Nav.Link>\r\n                          </LinkContainer>\r\n                          <LinkContainer to='/add-writer'exact>\r\n                            <Nav.Link>Add Writer</Nav.Link>\r\n                          </LinkContainer>\r\n                        </>\r\n                      )\r\n\r\n                      : \r\n                      <LinkContainer to='/add-blog'exact>\r\n                        <Nav.Link>Add Blog</Nav.Link>\r\n                      </LinkContainer>\r\n                    }\r\n\r\n                    <Nav.Link onClick={() => {\r\n                        dispatch(logout())\r\n                        history.push('/login')\r\n                        delete axios.defaults.headers.common['Authorization'];\r\n                      }  \r\n                    }>Logout</Nav.Link>\r\n                    </>\r\n                    ) : (\r\n                  <>\r\n                  <LinkContainer to='/'exact>\r\n                      <Nav.Link>Home</Nav.Link>\r\n                    </LinkContainer>\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>Login</Nav.Link>\r\n                  </LinkContainer>\r\n                    </>\r\n                )}\r\n\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n              </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3 footer-text'>\r\n                        Applore Technologies. Task Submitted by <strong>Neil Kapadia</strong>. \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Card, Button, Row, Container} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {useDispatch} from 'react-redux';\r\nimport { Markup } from 'interweave';\r\n\r\nconst AllBlogs = ({blog, isLoggedIn, isFavouritePage}) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    return (\r\n        // <Card className='col-xl-12 col-lg-12 col-md-12 col-sm-12'>\r\n        <Container fluid=\"md\">\r\n            <Card.Body>\r\n                <Card.Title as=\"h4\">{blog.title}</Card.Title>\r\n                <Card.Text as=\"p\" style={{fontSize: '12px'}}>{moment(blog.approvedOn).format('DD MMMM YYYY HH:mm')}</Card.Text>\r\n                <Card.Text style={{fontSize: '17px'}}>\r\n                    <Markup content={blog.content.substring(0, 100)} />{blog.content.length > 100 && `....`}\r\n                    {/* {blog.content.substring(0, 100)} */}\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={() => history.push(`/api/${blog._id}`)}>Read More</Button>\r\n            </Card.Body>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllBlogs\r\n","export const GET_BLOGS = 'GET_BLOGS';\r\nexport const GET_PUBLISHED_BLOGS = 'GET_PUBLISHED_BLOGS';\r\nexport const GET_PUBLISHED_BLOGS_RESULT = 'GET_PUBLISHED_BLOGS_RESULT';\r\nexport const PUBLISH_BLOGS = 'PUBLISH_BLOGS';\r\nexport const PUBLISH_BLOGS_RESULT = 'PUBLISH_BLOGS_RESULT';\r\nexport const APPROVE_BLOGS = 'APPROVE_BLOGS';\r\nexport const APPROVE_BLOGS_RESULT = 'APPROVE_BLOGS_RESULT';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const BLOGS_RESULT = 'BLOGS_RESULT';\r\nexport const BLOGS_ERROR = 'BLOGS_ERROR';\r\nexport const END_LOADING = 'END_LOADING';\r\nexport const REMOVE_ERRORS = 'REMOVE_ERRORS';\r\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE';","import {GET_BLOGS, PUBLISH_BLOGS, PUBLISH_BLOGS_RESULT, APPROVE_BLOGS, APPROVE_BLOGS_RESULT, SET_LOADING, BLOGS_RESULT, BLOGS_ERROR, END_LOADING, REMOVE_ERRORS, REMOVE_MESSAGE, GET_PUBLISHED_BLOGS_RESULT, GET_PUBLISHED_BLOGS} from '../constants/blogsConstant'\r\nexport const publishBlog = (payload) => {\r\n    return {\r\n        type: PUBLISH_BLOGS,\r\n        payload\r\n    }\r\n}\r\nexport const publishBlogResult = (payload) => {\r\n    return {\r\n        type: PUBLISH_BLOGS_RESULT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const aproveBlog = (payload) => {\r\n    return {\r\n        type: APPROVE_BLOGS,\r\n        payload\r\n    }\r\n}\r\nexport const aproveBlogResult = (payload) => {\r\n    return {\r\n        type: APPROVE_BLOGS_RESULT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getBlogs = () => {\r\n    return {\r\n        type: GET_BLOGS\r\n    }\r\n}\r\nexport const blogsResult = (payload) => {\r\n    return {\r\n        type: BLOGS_RESULT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getPublishedBlogs = () => {\r\n    return {\r\n        type: GET_PUBLISHED_BLOGS\r\n    }\r\n}\r\nexport const getPublishedBlogsResult = (payload) => {\r\n    return {\r\n        type: GET_PUBLISHED_BLOGS_RESULT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const blogError = (payload) => {\r\n    return {\r\n        type: BLOGS_ERROR,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const removeError = (payload) => {\r\n    return {\r\n        type: REMOVE_ERRORS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING,\r\n    }\r\n}\r\n\r\nexport const endLoading = () => {\r\n    return {\r\n        type: END_LOADING,\r\n    }\r\n}\r\n\r\nexport const removeMessage = () => {\r\n    return {\r\n        type: REMOVE_MESSAGE,\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {createDispatchHook, useDispatch, useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Message from '../general/Message';\r\nimport Loader from '../general/Loader';\r\nimport Blog from './AllBlogs'\r\nimport { useLocation } from 'react-router-dom';\r\nimport {getBlogs} from '../../actions/blogsActions'\r\n\r\n\r\nconst HomeScreen = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState(null)\r\n    const [page, setPage] = useState(0)\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const user = useSelector(state => state.user);\r\n    const blogs = useSelector(state => state.blogs);\r\n    const {blogsData, loading} = blogs;\r\n\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n      dispatch(getBlogs());\r\n    }, [dispatch])\r\n\r\n    return (\r\n      <>\r\n        <h1 className='home-page-heading'>Blogs</h1>\r\n          {loading ? \r\n            (<Loader />) \r\n          // : error ? \r\n          //   (<Message variant='danger'> {error} </Message> ) \r\n          : (\r\n            <>\r\n              <Row>\r\n                {blogsData && blogsData.map(blog => (\r\n                    <Col key={blog.id} sm={12} md={6} lg={4} xl={3}>\r\n                      <Blog blog={blog} />\r\n                    </Col>\r\n                ))}\r\n              </Row>\r\n            </>\r\n            )\r\n          }\r\n      </>\r\n    )\r\n}\r\n\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../general/Message';\r\nimport Loader from '../general/Loader';\r\nimport FormContainer from '../general/FormContainer';\r\nimport {publishBlog, removeMessage} from '../../actions/blogsActions';\r\n\r\nconst AddWriter = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.user)\r\n    const blogs = useSelector(state => state.blogs)\r\n    const {loading, error} = user;\r\n    const {blogMessage} = blogs;\r\n    \r\n    useEffect(() => {\r\n        if(blogMessage) {\r\n            setTitle('')\r\n            setContent('')\r\n            setMessage(null)\r\n            setTimeout(() => {dispatch(removeMessage())}, 4000)\r\n        }\r\n    }, [blogMessage])\r\n\r\n    const submitRegisterHandler = (e) => {\r\n        e.preventDefault();\r\n        if(!title || !content) {\r\n            setMessage('Please Fill All Details');\r\n        }\r\n        else {\r\n            setMessage(null);\r\n            let replacedContent = content.replaceAll('\\n', '<br />')\r\n            // console.log(replacedContent)\r\n            // console.log({title, content})\r\n            dispatch(publishBlog({title, content: replacedContent}));\r\n        }\r\n    }\r\n    \r\n        return (\r\n            <FormContainer>\r\n                <h1>Add Blog</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {blogMessage && <Message variant='success'>{blogMessage}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitRegisterHandler}>\r\n                    <Form.Group controlId='title'>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter title'\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='content'>\r\n                        <Form.Label>Content</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3} \r\n                            placeholder='Enter content'\r\n                            value={content}\r\n                            onChange={(e) => setContent(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </FormContainer>\r\n        )\r\n    }\r\n\r\nexport default AddWriter\r\n","import axios from 'axios'\r\n\r\nlet baseurl = process.env.REACT_APP_NODE_ENV === 'production' ? process.env.REACT_APP_BASE_URL_LIVE : process.env.REACT_APP_BASE_URL_TEST\r\n\r\n\r\nexport const publishBlog = async (data) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post(`api/blogs/add`, data,  config )\r\n        return res.data;\r\n            \r\n    } catch (err) {\r\n        console.log(err)\r\n        return err\r\n    }\r\n}\r\n\r\nexport const approveBlog = async (data) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post(`api/blogs/approve-blog`, data,  config )\r\n        return res.data;\r\n            \r\n    } catch (err) {\r\n        console.log(err)\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getBlogs = async () => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.get(`api/blogs/get-approved-blogs`)\r\n        console.log('Backend Res Favourites:::', res)\r\n        return res.data;\r\n            \r\n    } catch (err) {\r\n        console.log(err)\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getPublishedBlogs = async () => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.get(`api/blogs/get-requested-blogs`)\r\n        return res.data;\r\n            \r\n    } catch (err) {\r\n        console.log(err)\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getBlogById = async (payload) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.get(`blogs/get-blog/${payload}`)\r\n        return res.data;\r\n            \r\n    } catch (err) {\r\n        console.log(err)\r\n        return err\r\n    }\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Card, Button, Row, Container} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {useDispatch} from 'react-redux';\r\nimport {getBlogById} from '../../services/blogs';\r\nimport Message from '../general/Message';\r\nimport Loader from '../general/Loader';\r\nimport { Markup } from 'interweave';\r\n\r\n\r\nconst Blog = () => {\r\n    const [blog, setBlog] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [message, setMessage] = useState(null)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    \r\n    useEffect(() => {\r\n        const getBlog = async () => {\r\n            let id = history.location.pathname.split('/api/')[1]\r\n            let blogData = await getBlogById(id);\r\n            if(blogData) {\r\n                if(blogData.message === \"Blog Successfully Fetched\") {\r\n                    setBlog(blogData.data)\r\n                } else {\r\n                    setMessage('Blog Not Fetched')\r\n                }\r\n                setLoading(false)\r\n            }\r\n        } \r\n\r\n        getBlog()\r\n    }, [history])\r\n\r\n    useEffect(() => console.log(blog), [blog])\r\n\r\n    return (\r\n        <>\r\n        {loading && <Loader />}\r\n        {!loading && !blog && <Message variant='danger'>Blog Not Found</Message>}\r\n        <Container>\r\n            {!loading && blog && (\r\n                <>\r\n                    <Row>\r\n                        <h3>{blog.title}</h3>\r\n                    </Row>\r\n                    <Row>\r\n                        <p style={{fontSize:'13px', fontWeight: '600'}}>{blog.userId.name} {moment(blog.approvedOn).format('DD MMMM YYYY HH:mm')}</p>\r\n                    </Row>\r\n                    <Row>\r\n                        <Markup content={blog.content} />\r\n                    {/* {blog.content.split(\"<p>\").map(e => `<p>${e}</p>\\n`)} */}\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Table} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../general/Message';\r\nimport Loader from '../general/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport FormContainer from '../general/FormContainer';\r\nimport {publishBlog, removeMessage, getPublishedBlogs, aproveBlog} from '../../actions/blogsActions';\r\n\r\nconst AddWriter = () => {\r\n    const dispatch = useDispatch();\r\n     const history = useHistory()\r\n\r\n    const blogs = useSelector(state => state.blogs)\r\n    const {blogMessage, publishedBlogs, loading} = blogs;\r\n    \r\n    useEffect(() => {\r\n        dispatch(getPublishedBlogs());\r\n        if(blogMessage) {\r\n            setTimeout(() => {dispatch(removeMessage())}, 4000)\r\n        }\r\n    }, [blogMessage])\r\n    \r\n        return (\r\n            <>\r\n                <h1>Requested Blog</h1>\r\n                {blogMessage && <Message variant='success'>{blogMessage}</Message>}\r\n                {/* {error && <Message variant='danger'>{error}</Message>} */}\r\n                {loading && <Loader />}\r\n                {!loading && publishedBlogs.length === 0 && <Message variant='danger'>No Published Blogs</Message>}\r\n                {!loading && publishedBlogs.length > 0 && console.log(publishedBlogs)}\r\n                <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>No.</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Title</th>\r\n                    <th>Published On</th>\r\n                    <th>View</th>\r\n                    <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {publishedBlogs.length > 0 && publishedBlogs.map((blog, key) => \r\n                    (<tr key={key}>\r\n                        <td>{key}</td>\r\n                        <td>{blog.userId.name}</td>\r\n                        <td>{blog.userId.email}</td>\r\n                        <td>{blog.title}</td>\r\n                        <td>{moment(blog.publishedOn).format('DD MMMM YYYY HH:mm')}</td>\r\n                        <td onClick={() => history.push(`/api/${blog._id}`)}>Go To</td>\r\n                        <td onClick={() => dispatch(aproveBlog({blogId: blog._id}))} style={{fontWeight:'900', color:'darkred'}}>Go Live</td>\r\n                    </tr>)\r\n                \r\n                )}\r\n                </tbody>\r\n                </Table>\r\n            </>\r\n        )\r\n    }\r\n\r\nexport default AddWriter\r\n","import {Container} from 'react-bootstrap';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Login from './components/auth/Login';\nimport AddWriter from './components/auth/AddWriter';\nimport Header from './components/general/Header';\nimport Footer from './components/general/Footer';\nimport HomeScreen from './components/blogs/home';\nimport AddBlogs from './components/blogs/AddBlogs';\nimport Blog from './components/blogs/Blog';\nimport RequestedBlogs from './components/blogs/RequestedBlogs';\n// import FavouritesScreen from './components/blogs/Favourites';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-5' style={{minHeight: '80vh'}}>\n        <Container>\n          <Route path='/' component={HomeScreen} exact/>\n          <Route path='/login' component={Login} exact/>\n          <Route path='/request' component={RequestedBlogs} exact/>\n          <Route path='/add-writer' component={AddWriter} exact/>\n          <Route path='/add-blog' component={AddBlogs} exact/>\n          <Route path='/api/:id' component={Blog} exact/>\n          {/* <Route path='/discover/popular' component={HomeScreen} exact/>\n          <Route path='/discover/latest' component={HomeScreen} exact/>\n          <Route path='/discover/favourites' component={FavouritesScreen} exact/> */}\n        </Container>\n      </main>\n      <Footer />     \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\nimport store from '../store'\r\n\r\nexport const userSignIn = async (data) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post('api/user/login', data,  config )\r\n        console.log('Backend Res :::', res)\r\n        return res.data;\r\n            \r\n    } catch (err) {\r\n        console.log(err)\r\n        return err\r\n    }\r\n}\r\n\r\nexport const userSignUp = async (data) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post('api/user/addUser', data,  config )\r\n        console.log('Backend Res :::', res)\r\n        return res.data;\r\n            \r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n","import { call, put, takeLatest, all, select} from 'redux-saga/effects'\r\nimport {USER_SIGNIN, USER_SIGNUP} from '../constants/authConstants'\r\nimport * as AuthService from '../services/auth'\r\nimport * as AuthActions from '../actions/authActions'\r\n\r\nexport function* userSignInSaga(param) {\r\n    try {\r\n        const response = yield call(AuthService.userSignIn, param.payload);\r\n        if(!response.status) {\r\n          yield put(AuthActions.userSignInError(response.message ? response.message : response.data))\r\n        }\r\n        else {\r\n          yield put(AuthActions.userSignInResult(response.data))\r\n        }\r\n    \r\n      } catch (error) {\r\n        console.log(error)\r\n        yield put(AuthActions.userSignInError(error.message))\r\n      }\r\n}\r\n\r\nexport function* userSignUpSaga(param) {\r\n      try {\r\n        const response = yield call(AuthService.userSignUp, param.payload);\r\n        if(!response.status) {\r\n          yield put(AuthActions.userSignInError(response.message ? response.message : response.data))\r\n        }\r\n        else {\r\n          yield put(AuthActions.userSignUpResult(response.data))\r\n        }\r\n    \r\n      } catch (error) {\r\n        console.log(error)\r\n        yield put(AuthActions.userSignInError(error.message))\r\n      }\r\n}\r\n\r\n\r\nexport default function* actionWatcher() {\r\n    yield all([\r\n        takeLatest(USER_SIGNUP, userSignUpSaga),\r\n        takeLatest(USER_SIGNIN, userSignInSaga)\r\n    ])\r\n}","import { call, put, takeLatest, all, select} from 'redux-saga/effects'\r\nimport {GET_BLOGS, PUBLISH_BLOGS, APPROVE_BLOGS, GET_PUBLISHED_BLOGS} from '../constants/blogsConstant'\r\nimport * as BlogService from '../services/blogs'\r\nimport * as BlogAction from '../actions/blogsActions'\r\n\r\nexport function* getBlogsSaga() {\r\n    try {\r\n        const response = yield call(BlogService.getBlogs);\r\n        if(!response.status) {\r\n          yield put(BlogAction.blogError(response.message ? response.message : response.data))\r\n        }\r\n        else {\r\n          yield put(BlogAction.blogsResult(response.data))\r\n        }\r\n    \r\n      } catch (error) {\r\n        console.log(error)\r\n        yield put(BlogAction.blogError(error.message))\r\n      }\r\n}\r\n\r\nexport function* getPublishedBlogsSaga() {\r\n    try {\r\n        const response = yield call(BlogService.getPublishedBlogs);\r\n        if(!response.status) {\r\n          yield put(BlogAction.blogError(response.message ? response.message : response.data))\r\n        }\r\n        else {\r\n          yield put(BlogAction.getPublishedBlogsResult(response.data))\r\n        }\r\n    \r\n      } catch (error) {\r\n        console.log(error)\r\n        yield put(BlogAction.blogError(error.message))\r\n      }\r\n}\r\n\r\nexport function* publishBlogSaga(param) {\r\n      try {\r\n        const response = yield call(BlogService.publishBlog, param.payload);\r\n        if(!response.status) {\r\n          yield put(BlogAction.blogError(response.message ? response.message : response.data))\r\n        }\r\n        else {\r\n          yield put(BlogAction.publishBlogResult(response))\r\n        }\r\n    \r\n      } catch (error) {\r\n        console.log(error)\r\n        yield put(BlogAction.blogError(error.message))\r\n      }\r\n}\r\n\r\nexport function* approveBlogSaga(param) {\r\n      try {\r\n        const response = yield call(BlogService.approveBlog, param.payload);\r\n        if(!response.status) {\r\n          yield put(BlogAction.blogError(response.message ? response.message : response.data))\r\n        }\r\n        else {\r\n          yield put(BlogAction.aproveBlogResult(response))\r\n        }\r\n    \r\n      } catch (error) {\r\n        console.log(error)\r\n        yield put(BlogAction.blogError(error.message))\r\n      }\r\n}\r\n\r\n\r\nexport default function* actionWatcher() {\r\n    yield all([\r\n        takeLatest(PUBLISH_BLOGS, publishBlogSaga),\r\n        takeLatest(APPROVE_BLOGS, approveBlogSaga),\r\n        takeLatest(GET_BLOGS, getBlogsSaga),\r\n        takeLatest(GET_PUBLISHED_BLOGS, getPublishedBlogsSaga),\r\n    ])\r\n}","import {all} from 'redux-saga/effects'\r\nimport auth from './auth'\r\nimport blogs from './blogs'\r\n// import calorie from './calorieSaga'\r\n// import goal from './goalSaga'\r\n// import workout from './workoutSaga'\r\n\r\n\r\nexport default function* IndexSagas () {\r\n  yield all([\r\n    auth(),\r\n    blogs(),\r\n  ])\r\n}","import {USER_SIGNIN, USER_SIGNUP, USER_LOGOUT, USER_SIGNIN_RESULT, USER_SIGNUP_RESULT, USER_SIGNIN_ERROR, REMOVE_MESSAGE} from '../constants/authConstants'\r\n\r\nlet initialState = {\r\n    isLoggedIn: false, \r\n    loading: false, \r\n    error: null,\r\n    userMessage: null\r\n}\r\n\r\nexport const userAuthenticationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGNIN:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            error: null\r\n          }\r\n        case USER_SIGNIN_RESULT:\r\n          return {\r\n            ...state,\r\n            isLoggedIn: true,\r\n            userInfo: action.payload,\r\n            loading: false,\r\n            error: null\r\n          }\r\n        case USER_SIGNUP:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null          \r\n          }\r\n        case USER_SIGNUP_RESULT: \r\n          return {\r\n            ...state,\r\n            userMessage: 'Added New User2',\r\n            loading: false,\r\n            error: null\r\n          }\r\n        case REMOVE_MESSAGE: \r\n          return {\r\n            ...state,\r\n            userMessage: null,\r\n            error: null\r\n          }\r\n        case USER_SIGNIN_ERROR: \r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload,\r\n            isLoggedIn: true\r\n          }\r\n        case USER_LOGOUT: \r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            isLoggedIn: false,\r\n            userInfo: null\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n} ","import {GET_BLOGS, PUBLISH_BLOGS, PUBLISH_BLOGS_RESULT, APPROVE_BLOGS, APPROVE_BLOGS_RESULT, SET_LOADING, BLOGS_RESULT, BLOGS_ERROR, END_LOADING, REMOVE_ERRORS, REMOVE_MESSAGE, GET_PUBLISHED_BLOGS_RESULT, GET_PUBLISHED_BLOGS} from '../constants/blogsConstant'\r\n\r\nlet initialState = {\r\n    blogsData: [], \r\n    loading: false, \r\n    error: null,\r\n    myBlogs: [],\r\n    rejectedBlogs: [],\r\n    publishedBlogs: [],\r\n    blogMessage: null,\r\n}\r\n\r\nexport const blogsReducer = (state = initialState, action) => {\r\n  console.log('Action Payload',action.payload)\r\n    switch (action.type) {\r\n        case GET_BLOGS:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            blogsData: [],\r\n            error: null\r\n          }\r\n        case BLOGS_RESULT:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            blogsData: action.payload.blogs,\r\n            error: null          \r\n          }\r\n        case GET_PUBLISHED_BLOGS:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null\r\n          }\r\n        case GET_PUBLISHED_BLOGS_RESULT:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            publishedBlogs: action.payload.blogs,\r\n            error: null          \r\n          }\r\n        case PUBLISH_BLOGS:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null\r\n          }\r\n        case PUBLISH_BLOGS_RESULT:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            myBlogs: state.myBlogs.length > 0 ? [...state.myBlogs, action.payload.data] : [action.payload.data],\r\n            error: null,\r\n            blogMessage: 'Successfully Submitted Blog' \r\n          }\r\n        case REMOVE_MESSAGE:\r\n          return {\r\n            ...state,\r\n            blogMessage: null\r\n          }\r\n        case APPROVE_BLOGS:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null\r\n          }\r\n        case APPROVE_BLOGS_RESULT:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            blogsData: state.blogsData.length > 0 ? [...state.blogsData, action.payload.data] : [action.payload.data],\r\n            publishedBlogs: state.publishedBlogs.length > 1 ? state.publishedBlogs.filter(blog => blog.id != action.payload.data._id) : [],\r\n            blogMessage: 'Blog is Now Live',\r\n            error: null          \r\n          }\r\n        case SET_LOADING:\r\n          return {\r\n            ...state,\r\n            loading: true\r\n          }\r\n        case END_LOADING: \r\n          return {\r\n            ...state,\r\n            loading: false\r\n          }\r\n        case BLOGS_ERROR: \r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload\r\n          }\r\n        case REMOVE_ERRORS: \r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: null\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n} ","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    else{\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport rootSaga from './sagas'\r\nimport {userAuthenticationReducer} from './reducers/authReducer'\r\nimport {blogsReducer} from './reducers/blogsReducer'\r\nimport setAuthToken from './services/setToken'\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\n\r\nif(userInfoFromStorage) \r\n  setAuthToken(userInfoFromStorage.token);\r\nelse \r\n  setAuthToken(null);\r\n\r\nconst initialState = {\r\n    user: { \r\n        userInfo: userInfoFromStorage,\r\n        isLoggedIn: !userInfoFromStorage ? false : true\r\n    }\r\n}\r\n\r\nconst reducers = combineReducers({\r\n    user: userAuthenticationReducer,\r\n    blogs: blogsReducer,\r\n})\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [sagaMiddleware];\r\n\r\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// const action = type => store.dispatch({type})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './bootstrap.min.css'\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport setAuthToken from './services/setToken'\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nif(userInfoFromStorage) \n  setAuthToken(userInfoFromStorage.token);\nelse \n  setAuthToken(null);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}